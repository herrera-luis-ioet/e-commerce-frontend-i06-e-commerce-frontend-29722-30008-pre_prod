{"is_source_file": true, "format": "TypeScript/React", "description": "A React component that provides filtering and sorting options for products, utilizing Redux for state management.", "external_files": ["./ProductFilter.styles", "../../redux/hooks", "../../redux/slices/filterSlice", "../../types/product.types", "../common/Button"], "external_methods": ["useAppDispatch", "useAppSelector", "setCategory", "setPriceRange", "setSortBy", "resetFilters", "selectCategory", "selectPriceRange", "selectSortBy"], "published": ["ProductFilter"], "classes": [{"name": "ProductFilter", "description": "React functional component for filtering and sorting products."}], "methods": [{"name": "handleCategoryChange", "description": "Dispatches the selected category to Redux when the category is changed."}, {"name": "handlePriceChange", "description": "Handles input changes for minimum and maximum price, dispatching updated price range to Redux."}, {"name": "handleSortChange", "description": "Dispatches the selected sorting option to Redux when the sort option is changed."}, {"name": "handleResetFilters", "description": "Dispatches a reset action to clear all filters."}, {"name": "useEffect", "description": "Ensures the minimum price is not greater than the maximum price, dispatching adjustments to Redux."}], "calls": ["dispatch(setCategory)", "dispatch(setPriceRange)", "dispatch(setSortBy)", "dispatch(resetFilters)"], "search-terms": ["ProductFilter", "filter", "sort", "Redux"], "state": 2, "file_id": 67, "knowledge_revision": 165, "git_revision": "", "ctags": [], "filename": "/home/kavia/workspace/e-commerce-frontend-i06-e-commerce-frontend-29722-30008-pre_prod/src/components/ProductFilter/ProductFilter.tsx", "hash": "8f9bd2aaab13b6e5eff6a8c3b8b157f5", "format-version": 4, "code-base-name": "default", "revision_history": [{"165": ""}]}